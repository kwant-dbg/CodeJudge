# Generic Dockerfile template for Go services
ARG SERVICE_NAME
ARG SERVICE_PORT

FROM golang:1.19-alpine AS builder

WORKDIR /src

# Copy workspace files
COPY go.work ./
COPY common-go/go.mod ./common-go/

# Copy service-specific go.mod/go.sum
COPY ${SERVICE_NAME}/go.mod ${SERVICE_NAME}/go.sum ./${SERVICE_NAME}/

# Sync workspace
RUN go work sync

# Copy source code
COPY common-go ./common-go
COPY ${SERVICE_NAME} ./${SERVICE_NAME}

# Build the service
RUN CGO_ENABLED=0 GOOS=linux go build \
    -C ./${SERVICE_NAME} \
    -trimpath \
    -ldflags="-s -w" \
    -o /out/service

# Production stage
FROM alpine:3.16

# Install certificates for HTTPS connections
RUN apk --no-cache add ca-certificates

WORKDIR /app

# Copy the binary
COPY --from=builder /out/service .

# Create non-root user
RUN addgroup -g 1001 appuser && \
    adduser -D -u 1001 -G appuser appuser
USER appuser

# Expose the port
EXPOSE ${SERVICE_PORT}

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${SERVICE_PORT}/health || exit 1

CMD ["./service"]